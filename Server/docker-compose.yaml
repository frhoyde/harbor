version: '3.8'

services:
  api:
    build:
      context: .
    env_file:
      - .env
    environment:
      NODE_ENV: production
      WAIT_HOSTS: mongo1:27021
    ports:
      - 8000:8000
    depends_on:
      - mongo1
    networks:
      - mongors-network
  mongo1:
    container_name: mongo1
    image: mongo:latest
    volumes:
      - ~/mongors/data1:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mongors-network
    ports:
      - 27017:27017
    links:
      - mongo2
      - mongo3
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    image: mongo:latest
    volumes:
      - ~/mongors/data2:/data/db
    networks:
      - mongors-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MONGO_REPLICA_HOST: host.docker.internal
      MONGO_REPLICA_PORT: 27019
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    image: mongo:latest
    volumes:
      - ~/mongors/data3:/data/db
    networks:
      - mongors-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MONGO_REPLICA_HOST: host.docker.internal
      MONGO_REPLICA_PORT: 27020
    ports:
      - 27019:27027
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

networks:
  mongors-network:
    driver: bridge