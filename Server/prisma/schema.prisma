// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  uuid             String           @id @default(auto()) @map("_id") @db.ObjectId
  username         String
  email            String           @unique
  password         String
  Organization     Organization     @relation(fields: [organizationUuid], references: [uuid])
  organizationUuid String           @db.ObjectId
  userOfFacility   UserOfFacility[]
}

model Organization {
  uuid       String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String     @unique
  address    String
  website    String
  facilities Facility[]
  users      User[]
}

model UserOfFacility {
  uuid         String   @id @default(auto()) @map("_id") @db.ObjectId
  user         User     @relation(fields: [userId], references: [uuid])
  userId       String   @db.ObjectId
  facility     Facility @relation(fields: [facilityName], references: [name])
  facilityName String
  role         String

  @@unique([userId, facilityName])
}

model Facility {
  uuid             String           @id @default(auto()) @map("_id") @db.ObjectId
  name             String           @unique
  address          String
  websiteUrl       String
  contact          Contact
  // operatingHours   OperatingHours
  snapshots        Snapshot[]
  endPoints        EndPoints[]
  Organization     Organization     @relation(fields: [organizationUuid], references: [uuid])
  organizationUuid String           @db.ObjectId
  userOfFacility   UserOfFacility[]
}

type Contact {
  phone String
  email String
}

type OperatingHours {
  Monday    String
  Tuesday   String
  Wednesday String
  Thursday  String
  Friday    String
  Saturday  String
  Sunday    String
}

model Snapshot {
  snapshotUuid String        @id @default(auto()) @map("_id") @db.ObjectId
  snapshotAt   DateTime      @default(now())
  storageUnits StorageUnit[]
  facility     Facility      @relation(fields: [facilityName], references: [name])
  facilityName String
}

type Size {
  width Float
  depth Float
}

model StorageUnit {
  uuid       String   @id @default(auto()) @map("_id") @db.ObjectId
  size       Size
  type       String
  price      Float
  features   String[]
  special    String   @default("")
  snapshot   Snapshot @relation(fields: [snapshotId], references: [snapshotUuid])
  snapshotId String   @db.ObjectId
}

model EndPoints {
  uuid         String   @id @default(auto()) @map("_id") @db.ObjectId
  url          String
  facility     Facility @relation(fields: [facilityName], references: [name])
  facilityName String
}
